name: Semantic Versioning Release
on:
  push:
    branches:
      - main
      - develop
      - release

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4.2.2
        with: 
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Configure Git
        run: |
          git config user.name "CI Bot"
          git config user.email "ci@example.com"

      - name: merge main into current branch
        run: |
          # Determine the current branch name
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          echo "Processing branch: $current_branch"
          
          # Check if origin/main is ahead of the current branch
          updates=$(git rev-list HEAD..origin/main --count)
          echo "Updates available: $updates"
          if [ "$updates" -gt 0 ]; then
            git config pull.rebase false
            git pull origin main
            echo "Attempting merge..."
            if git merge origin/main; then
              git push origin "$current_branch"
            else
              echo "merge failed for branch '$current_branch' (merge conflicts may exist) - please resolve manually."
              exit 1
            fi
          else
            echo "Branch '$current_branch' is up-to-date with origin/main. No merge required."
          fi
      
      - name: Configure Semantic Release
        run: |
          echo '{
            "branches": [
              "main",
              {
                "name": "develop",
                "prerelease": "beta"
              },
              {
                "name": "release",
                "prerelease": "rc"
              }
            ],
            "plugins": 
            [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/github"
            ]
          }' > .releaserc.json
          
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.ALL_PACKAGE_TOKEN }}        

      - name: Dump release outputs
        env:
          RELEASE_OUTPUTS: ${{ toJson(steps.semantic.outputs) }}
        run: echo "$RELEASE_OUTPUTS"
